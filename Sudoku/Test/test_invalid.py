import unittest


class MyTestCase(unittest.TestCase):
    def test_something(self):
        self.assertEqual(True, False)


#
#     # (INVALID GRID) -----------------------------------------------------------
#     problem = [[1, 1, 3, 4, 5, 6, 7, 8, 9],  # 1, 1 is INVALID
#                [4, 0, 6, 7, 8, 9, 1, 2, 3],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     # fixme: should throw an error but does not
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8, 9],  # col 0: 1,1 INVALID
#                [1, 0, 6, 7, 8, 9, 1, 2, 3],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     # fixme should throw an error
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [4, 0, 6, 7, 8, 9, 1, 2, 3],
#                [7, 8, 1, 1, 2, 3, 4, 5, 6],  # 1, 1 in the fixed values
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     # fixme: should through an error
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 1, 3, 4, 5, 6, 7, 8, 9],
#                [4, 0, 6, 7, 8, 9, 1, 2, 3],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [2, 3, 4, 5, 6, 7, 8, 9],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [4, 0, 6, 7, 8, 9, 1, 2, 3],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8],
#                [4, 0, 6, 7, 8, 9, 1, 2],
#                [7, 8, 9, 1, 2, 3, 4, 5],
#                [2, 3, 4, 5, 6, 7, 8, 9],
#                [5, 6, 7, 8, 9, 1, 2, 3],
#                [8, 9, 1, 2, 3, 4, 5, 6],
#                [3, 4, 5, 6, 7, 8, 9, 1],
#                [6, 7, 8, 9, 1, 2, 3, 4],
#                [9, 1, 2, 3, 4, 5, 6, 7]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8, 'a'],
#                [4, 0, 6, 7, 8, 9, 1, 2, 3],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 2, 3, 4, 5, 6, 7, 8, 9]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 1, 1, 1, 1, 1, 1, 1, 1],
#                [2, 2, 2, 2, 2, 2, 2, 2, 2],
#                [3, 3, 3, 3, 3, 3, 3, 3, 3],
#                [4, 4, 4, 4, 4, 4, 4, 4, 4],
#                [5, 5, 5, 5, 5, 5, 5, 5, 5],
#                [6, 6, 6, 6, 6, 6, 6, 6, 6],
#                [7, 7, 7, 7, 7, 7, 7, 7, 7],
#                [8, 8, 8, 8, 8, 8, 8, 8, 8],
#                [9, 9, 9, 9, 9, 9, 9, 9, 9]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[1, 2, 3, 4, 5, 6, 7, 8, 9],
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [4, 5, 6, 7, 8, 9, 1, 2, 3],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     problem = [[0, 9, 6, 5, 0, 4, 0, 7, 1],
#                [0, 2, 0, 1, 0, 0, 0, 0, 0],
#                [0, 1, 4, 0, 9, 0, 6, 2, 3],
#                [0, 0, 3, 0, 6, 0, 0, 8, 0],
#                [0, 0, 8, 0, 5, 0, 4, 0, 0],
#                [9, 0, 0, 4, 1, 0, 0, 0, 5],
#                [7, 0, 0, 0, 0, 9, 0, 0, 0],
#                [0, 0, 1, 0, 7, 5, 3, 4, 9],
#                [2, 3, 0, 0, 4, 8, 1, 0, 7]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')
#
#     # unsolvable ones:
#     problem = [[0, 2, 3, 4, 5, 6, 7, 8, 9],
#                [1, 5, 6, 7, 8, 9, 0, 2, 3],
#                [7, 8, 9, 1, 2, 3, 4, 5, 6],
#                [2, 3, 4, 5, 6, 7, 8, 9, 1],
#                [5, 6, 7, 8, 9, 1, 2, 3, 4],
#                [8, 9, 1, 2, 3, 4, 5, 6, 7],
#                [3, 4, 5, 6, 7, 8, 9, 1, 2],
#                [6, 7, 8, 9, 1, 2, 3, 4, 5],
#                [9, 1, 2, 3, 4, 5, 6, 7, 8]]
#     try:
#         Sudoku(problem).solve()
#         print('failed to fail')
#     except:
#         print('successfull test')

if __name__ == '__main__':
    unittest.main()
